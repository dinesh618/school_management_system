spring:
  application:
    name: school-management-system

  profiles:
    active: development

  # mail
  mail:
    host: smtp.gmail.com
    port: 587
    username: cdineshchauhan636896@gmail.com
    password: bkqe picx nxtr dwtg
    properties:
      mail:
         smtp:
           auth: true
           starttls:
             enable: true


  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/school_management_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:love123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: school-management-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3

  # JSON Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

  # Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

# Application Specific Configuration
app:
  jwtSecret: ${JWT_SECRET:schoolManagementSystemSecretKeyForJWTTokenGeneration2024}
  jwtExpirationInMs: ${JWT_EXPIRATION:86400000} # 24 hours

# Logging Configuration
logging:
  level:
    com.school: INFO
    org.springframework.security: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/school-management.log

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true
    db:
      enabled: true

# Validation
spring.jpa.properties.hibernate.validator.apply_to_ddl: false

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development

  datasource:
    url: jdbc:mysql://localhost:3306/school_management_dev?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  redis:
    host: localhost
    port: 6379

  kafka:
    bootstrap-servers: localhost:9092

logging:
  level:
    com.school: DEBUG
    org.springframework.security: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production

  datasource:
    url: ${DATABASE_URL}
    hikari:
      maximum-pool-size: 50

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}

server:
  port: ${PORT:8080}

logging:
  level:
    com.school: WARN
    root: WARN


